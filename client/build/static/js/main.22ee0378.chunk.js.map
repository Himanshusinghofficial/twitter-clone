{"version":3,"sources":["twitter.svg","components/Navbar.js","components/screens/Profile.js","components/screens/Login.js","components/screens/Signup.js","components/TweetBox.js","components/screens/Home.js","components/screens/Explore.js","reducers/userReducer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","useStyles","makeStyles","theme","root","maxWidth","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Profile","classes","React","useState","expanded","setExpanded","alt","src","Card","style","margin","className","CardHeader","Avatar","title","subheader","CardContent","Typography","variant","color","component","CardActions","disableSpacing","IconButton","clsx","onClick","Collapse","in","timeout","unmountOnExit","paragraph","Login","useContext","userContext","dispatch","state","history","useHistory","email","setEmail","password","setPassword","twitterLogo","action","placeholder","value","onChange","e","target","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","error","localStorage","setItem","token","user","payload","push","catch","err","Signup","name","setName","require","config","TweetBox","setBody","tweet","setTweet","useEffect","getItem","Button","Home","result","handleExpandClick","border","Explore","setData","posts","reducer","createContext","Routing","parse","path","exact","SignUp","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.22ee0378.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitter.7bde2a6d.svg\";","import React from 'react';\nimport '../App.css'\nimport { Link } from 'react-router-dom';\nconst Navbar = () => {\n\n    return (\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a class=\"navbar-brand\" href=\"#\">Twitter</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul class=\"navbar-nav\">\n            <li class=\"nav-item active\">\n              <Link to=\"/\" class=\"sr-only\">Home</Link>\n              {/* <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a> */}\n            </li>\n            <li class=\"nav-item\">\n            <Link to=\"/profile\" class=\"nav-link\">Profile </Link>\n            </li>\n            <li class=\"nav-item\">\n              <Link to=\"/login\" class=\"nav-link\">Login </Link>\n            </li>\n            <li class=\"nav-item\">\n              <Link to=\"/signup\" class=\"nav-link\">Signup </Link>\n            </li>\n            <li class=\"nav-item\">\n              <Link to=\"/explore\" class=\"nav-link\"> Explore </Link>\n            </li>\n            <li class=\"nav-item\">\n              <Link to=\"/\" class=\"nav-link\"> Home </Link>\n            </li>\n            \n          </ul>\n        </div>\n      </nav>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red, blue } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport '../../styles/Profile.css'\nimport twitterLogo from '../../twitter.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 600,\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  }));  \n\n\nconst Profile = () => {\n\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n\n    return (\n        <div>\n        <section class=\"text-gray-700 body-font\">\n        <div class=\"container-fluid flex flex-col\">\n            <div class=\"lg:w-100 mx-auto\">\n            <div class=\"rounded-lg h-70 overflow-hidden\">\n                <img alt=\"content\" class=\"object-cover object-center h-full w-full\" src=\"https://i0.wp.com/cartologytravel.com/wp-content/uploads/2017/11/Header-Image-1800-x-600.png?ssl=1\"/>\n            </div>\n            <div class=\"flex flex-col sm:flex-row -mt-20\">\n                <div class=\"sm:w-1/3 text-center sm:pr-8 sm:py-8\">\n                <div class=\"w-20 h-20 rounded-full inline-flex items-center justify-center bg-gray-200 text-gray-400\">\n                    <img src=\"https://i0.wp.com/cartologytravel.com/wp-content/uploads/2017/11/Header-Image-1800-x-600.png?ssl=1\"></img>\n                </div>\n                <div class=\"flex flex-col items-left text-left ml-16\">\n                    <h2 class=\"font-medium title-font mt-4 text-gray-900 text-lg\">Jone Doe</h2>\n                    <p class=\"text-base text-gray-600\">JohnDoe</p>\n                    <div class=\"w-12 h-1 bg-indigo-500 rounded mt-2 mb-4\"></div>\n                    <div class=\"inline-flex inline-flex-col items-left text-left\">\n                    <p class=\"text-base text-gray-600\">25 Followers</p><p class=\"text-base text-gray-600 ml-16\">100 Followings</p>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n        </section>\n        <Card style={{maxWidth:\"1000px\", margin:\"35px auto\"}} className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              R\n            </Avatar>\n          }\n          title=\"Shrimp and Chorizo Paella\"\n          subheader=\"September 14, 2016\"\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            This impressive paella is a perfect party dish and a fun meal to cook together with your\n            guests. Add 1 cup of frozen peas along with the mussels, if you like.\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n            <FavoriteIcon />\n          </IconButton>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>Method:</Typography>\n            <Typography paragraph>\n              Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\n              minutes.\n            </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n      </div>\n    )\n}\n\nexport default Profile;","import '../../styles/Login.css';\nimport twitterLogo from '../../twitter.svg';\nimport React, {useState, useContext} from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { userContext } from '../../App';\nconst Login = () => {\n    const {state, dispatch} = useContext(userContext)\n    const history = useHistory()\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const postData = () => {\n        //regex for email validation\n        // console.log(\"xxxxx\")\n\n        fetch(\"/auth/signin\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({email, password})\n        })\n        .then(res => res.json())\n        .then(data => {\n            console.log(data)\n            if(data.error) {\n               console.log(data.error)\n            } else {\n                console.log(\"login successful\")\n                localStorage.setItem(\"jwt\", data.token)\n                localStorage.setItem(\"user\", JSON.stringify(data.user))\n                dispatch({type: \"USER\", payload: data.user})\n                history.push('/')\n            }\n        })\n        .catch(err => console.log(err))\n    }\n\n    return (\n        <div className=\"login-wrapper\">\n            <img src={twitterLogo} alt=\"logo\"/>\n            <form action=\"none\">\n                <input type=\"email\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                <input type=\"password\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                <button onClick={() => postData()}> Login </button>\n            </form>\n            <Link to=\"/signup\">Don't have Account?</Link>\n        </div>\n    )\n}\n\nexport default Login;","import React, {useState} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport twitterLogo from '../../twitter.svg';\nimport '../../styles/Login.css';\nconst Signup = () => {\n    const history = useHistory()\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const postData = () => {\n        //regex for email validation\n\n        fetch('/auth/signup', {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({name, email, password})\n        })\n        .then(res => res.json())\n        .then(data => {\n            //check for error show toast\n            console.log('signup successful')\n            history.push('/signin')\n        })\n        .catch(err => console.log(err))\n    }\n\n    return (\n        <div className=\"login-wrapper\">\n            <img src={twitterLogo} alt=\"logo\"/>\n            <form action=\"none\">\n                <input type=\"text\" placeholder=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\n                <input type=\"text\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                <input type=\"text\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                <button onClick={() => postData()} > SignUp </button>\n            </form>\n            <Link to=\"/login\">Already have Account?</Link>\n        </div>\n    );\n}\n\nexport default Signup;","import React, {useState, useEffect} from 'react';\nimport {useHistory} from 'react-router-dom'\nimport \"../styles/TweetBox.css\";\nimport { Avatar, Button } from \"@material-ui/core\";\nrequire('dotenv').config();\n\nfunction TweetBox() {\n  // const [tweetMessage, setTweetMessage] = useState(\"\");\n  const history = useHistory()\n  const [body, setBody] = useState(\"\")\n  const [tweet, setTweet] = useState(\"\")\n  useEffect(() => {\n    if(body) {\n        fetch(\"/post/createpost\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({body})\n        })\n        .then(res => res.json())\n        .then(data => {\n            //check for error show toast\n            console.log('post created successfully')\n            history.push('/')\n        })\n        .catch(err => console.log(err)) \n    }\n},[tweet])\n\n\n  return (\n    <div className=\"tweetBox\" style={{maxWidth:\"800px\", margin:\"35px auto\"}}>\n      <form>\n        <div className=\"tweetBox__input\">\n          <Avatar src=\"https://kajabi-storefronts-production.global.ssl.fastly.net/kajabi-storefronts-production/themes/284832/settings_images/rLlCifhXRJiT0RoN2FjK_Logo_roundbackground_black.png\" />\n          <input type=\"text\" value={body} onChange={(e) => setBody(e.target.value)} placeholder=\"What's happening?\" />\n        </div>\n        <Button onClick={() => setTweet({body})} type=\"submit\" className=\"tweetBox__tweetButton\" >\n          Tweet\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default TweetBox;\n","import React, {useState, useEffect, useContext} from 'react';\nimport {userContext} from '../../App'\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red, blue } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TweetBox from '../TweetBox'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function Home() {\n\n  const [data, setData] = useState([])\n    const {state, dispatch} = useContext(userContext)\n    useEffect(() => {\n        fetch('/post/allpost', {\n            headers: {\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        })\n        .then(res => res.json())\n        .then(result => {\n            // console.log(result)\n            // setData(result.posts)\n        })\n    },[])\n\n\n    const likePost = (id) => {\n      fetch('/post/likes', {\n          method:\"put\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\n          },\n          body:JSON.stringify({\n              postId: id\n          })\n      })\n      .then(res => res.json())\n      .then(result => {\n          // console.log(result)\n          const newData = data.map(item => {\n              if(item._id === result._id) {\n                  return result;\n              } else {\n                  return item\n              }\n          })\n          setData(newData)\n      })\n      .catch(err => {\n          console.log(err)\n      })\n  }\n\n  const putComment = (text, postId) => {\n      fetch('/post/comment', {\n          method:\"put\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\n          },\n          body:JSON.stringify({\n              text,\n              postId\n          })\n      })\n      .then(res => res.json())\n      .then(result => {\n          // console.log(result)\n          const newData = data.map(item => {\n              if(item._id === result._id) {\n                  return result;\n              } else {\n                  return item\n              }\n          })\n          setData(newData)\n      })\n      .catch(err => {\n          console.log(err)\n      })\n  }\n\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <>\n      <TweetBox />\n      <Card style={{maxWidth:\"1000px\", margin:\"35px auto\", border: \"1px solid black\"}} className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              R\n            </Avatar>\n          }\n          title=\"Rahul\"\n          subheader=\"September 5, 2020\"\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n            10 <FavoriteIcon />\n          </IconButton>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>Method:</Typography>\n            <Typography paragraph>\n              Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\n              minutes.\n            </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n\n      <Card style={{maxWidth:\"1000px\", margin:\"35px auto\", border: \"1px solid black\"}} className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              V\n            </Avatar>\n          }\n          title=\"vikash\"\n          subheader=\"September 14, 2016\"\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n            12 <FavoriteIcon />\n          </IconButton>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>Method:</Typography>\n            <Typography paragraph>\n              Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\n              minutes.\n            </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    </>\n    )\n}\n","import React, {useState, useEffect, useContext} from 'react';\nimport {userContext} from '../../App'\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red, blue } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function Explore() {\n\n  const [data, setData] = useState([])\n    const {state, dispatch} = useContext(userContext)\n    useEffect(() => {\n        fetch('/post/allpost', {\n            headers: {\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        })\n        .then(res => res.json())\n        .then(result => {\n            // console.log(result)\n            setData(result.posts)\n        })\n    },[])\n\n\n    const likePost = (id) => {\n      fetch('/post/likes', {\n          method:\"put\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\n          },\n          body:JSON.stringify({\n              postId: id\n          })\n      })\n      .then(res => res.json())\n      .then(result => {\n          // console.log(result)\n          const newData = data.map(item => {\n              if(item._id === result._id) {\n                  return result;\n              } else {\n                  return item\n              }\n          })\n          setData(newData)\n      })\n      .catch(err => {\n          console.log(err)\n      })\n  }\n\n  const putComment = (text, postId) => {\n      fetch('/post/comment', {\n          method:\"put\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\n          },\n          body:JSON.stringify({\n              text,\n              postId\n          })\n      })\n      .then(res => res.json())\n      .then(result => {\n          // console.log(result)\n          const newData = data.map(item => {\n              if(item._id === result._id) {\n                  return result;\n              } else {\n                  return item\n              }\n          })\n          setData(newData)\n      })\n      .catch(err => {\n          console.log(err)\n      })\n  }\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <>\n    <Card style={{maxWidth:\"1000px\", margin:\"35px auto\", border: \"1px solid black\"}} className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            R\n          </Avatar>\n        }\n        title=\"Rahul\"\n        subheader=\"September 5, 2020\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          10 <FavoriteIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\n            minutes.\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n\n    <Card style={{maxWidth:\"1000px\", margin:\"35px auto\", border: \"1px solid black\"}} className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            V\n          </Avatar>\n        }\n        title=\"vikash\"\n        subheader=\"September 14, 2016\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.          </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          12 <FavoriteIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\n            minutes.\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n    <Card style={{maxWidth:\"1000px\", margin:\"35px auto\", border: \"1px solid black\"}} className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            V\n          </Avatar>\n        }\n        title=\"vishal\"\n        subheader=\"August 14, 2020\"\n      />\n\n      <CardContent>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n         But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure.\n      </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          15 <FavoriteIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\n            minutes.\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  </>\n  )\n}\n","export const initialState = null\n\nexport const reducer = (state, action) => {\n    if(action.type === \"USER\") {\n        return action.payload\n    }\n    if(action.type === \"CLEAR\") {\n        return null\n    }\n    return state\n}","import React, {useEffect, createContext, useReducer, useContext} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, useHistory, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Profile from './components/screens/Profile';\nimport Login from './components/screens/Login';\nimport SignUp from './components/screens/Signup';\nimport Home from './components/screens/Home';\nimport Explore from './components/screens/Explore'\n// import CreatePost from './components/screens/CreatePost';\nimport {reducer, initialState} from './reducers/userReducer'\nexport const userContext = createContext()\nconst Routing = () => {\n  const history = useHistory()\n  const {state, dispatch} = useContext(userContext)\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if(user) {\n      dispatch({type: \"USER\", payload: user})\n    } else {\n      history.push('/login')\n    }\n  },[])\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/profile\" exact component={Profile} />\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/signup\" exact component={SignUp} />\n      <Route path=\"/explore\" exact component={Explore} />\n      {/* <Route path=\"/createpost\" exact component={CreatePost} /> */}\n    </Switch>\n  )\n}\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <userContext.Provider value={{state, dispatch}}>\n      <Router>\n        <Navbar />\n        <Routing />\n      </Router>\n    </userContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}